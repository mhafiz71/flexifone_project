# Generated by Django 5.2.5 on 2025-08-10 22:57

from django.db import migrations


def link_orphaned_accounts_to_phones(apps, schema_editor):
    """Link any credit accounts without phone references to available phones"""
    CreditAccount = apps.get_model('accounts', 'CreditAccount')
    Phone = apps.get_model('phones', 'Phone')

    # Find accounts without phone references
    orphaned_accounts = CreditAccount.objects.filter(phone__isnull=True)

    if orphaned_accounts.exists():
        # Get the first available phone as a fallback
        fallback_phone = Phone.objects.first()

        if fallback_phone:
            for account in orphaned_accounts:
                account.phone = fallback_phone
                account.save()
                print(f"Linked orphaned account {account.id} to phone {fallback_phone.name}")
        else:
            print("Warning: No phones available to link orphaned accounts to")


def reverse_link_orphaned_accounts(apps, schema_editor):
    """Reverse operation - this is a data migration so we can't really reverse it"""
    # We can't really reverse this operation since we don't know which accounts
    # were originally orphaned, so we'll just pass
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0010_remove_creditapplication_product_and_more'),
        ('phones', '0004_phone_credit_available_phone_interest_rate_and_more'),
    ]

    operations = [
        migrations.RunPython(link_orphaned_accounts_to_phones, reverse_link_orphaned_accounts),
    ]
